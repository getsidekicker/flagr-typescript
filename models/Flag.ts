/**
 * Flagr
 * Flagr is a feature flagging, A/B testing and dynamic configuration microservice. The base path for all the APIs is \"/api/v1\". 
 *
 * OpenAPI spec version: 1.1.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Segment } from './Segment';
import { Tag } from './Tag';
import { Variant } from './Variant';
import { HttpFile } from '../http/http';

export class Flag {
    'id'?: number;
    /**
    * unique key representation of the flag
    */
    'key'?: string;
    'description': string;
    'enabled': boolean;
    'tags'?: Array<Tag>;
    'segments'?: Array<Segment>;
    'variants'?: Array<Variant>;
    /**
    * enabled data records will get data logging in the metrics pipeline, for example, kafka.
    */
    'dataRecordsEnabled': boolean;
    /**
    * it will override the entityType in the evaluation logs if it's not empty
    */
    'entityType'?: string;
    /**
    * flag usage details in markdown format
    */
    'notes'?: string;
    'createdBy'?: string;
    'updatedBy'?: string;
    'updatedAt'?: Date;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "key",
            "baseName": "key",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "enabled",
            "baseName": "enabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "tags",
            "baseName": "tags",
            "type": "Array<Tag>",
            "format": ""
        },
        {
            "name": "segments",
            "baseName": "segments",
            "type": "Array<Segment>",
            "format": ""
        },
        {
            "name": "variants",
            "baseName": "variants",
            "type": "Array<Variant>",
            "format": ""
        },
        {
            "name": "dataRecordsEnabled",
            "baseName": "dataRecordsEnabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "entityType",
            "baseName": "entityType",
            "type": "string",
            "format": ""
        },
        {
            "name": "notes",
            "baseName": "notes",
            "type": "string",
            "format": ""
        },
        {
            "name": "createdBy",
            "baseName": "createdBy",
            "type": "string",
            "format": ""
        },
        {
            "name": "updatedBy",
            "baseName": "updatedBy",
            "type": "string",
            "format": ""
        },
        {
            "name": "updatedAt",
            "baseName": "updatedAt",
            "type": "Date",
            "format": "date-time"
        }    ];

    static getAttributeTypeMap() {
        return Flag.attributeTypeMap;
    }
    
    public constructor() {
    }
}

