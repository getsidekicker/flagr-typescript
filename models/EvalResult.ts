/**
 * Flagr
 * Flagr is a feature flagging, A/B testing and dynamic configuration microservice. The base path for all the APIs is \"/api/v1\". 
 *
 * OpenAPI spec version: 1.1.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { EvalContext } from './EvalContext';
import { EvalDebugLog } from './EvalDebugLog';
import { HttpFile } from '../http/http';

export class EvalResult {
    'flagID'?: number;
    'flagKey'?: string;
    'flagSnapshotID'?: number;
    'segmentID'?: number;
    'variantID'?: number;
    'variantKey'?: string;
    'variantAttachment'?: any;
    'evalContext'?: EvalContext;
    'timestamp'?: string;
    'evalDebugLog'?: EvalDebugLog;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "flagID",
            "baseName": "flagID",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "flagKey",
            "baseName": "flagKey",
            "type": "string",
            "format": ""
        },
        {
            "name": "flagSnapshotID",
            "baseName": "flagSnapshotID",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "segmentID",
            "baseName": "segmentID",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "variantID",
            "baseName": "variantID",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "variantKey",
            "baseName": "variantKey",
            "type": "string",
            "format": ""
        },
        {
            "name": "variantAttachment",
            "baseName": "variantAttachment",
            "type": "any",
            "format": ""
        },
        {
            "name": "evalContext",
            "baseName": "evalContext",
            "type": "EvalContext",
            "format": ""
        },
        {
            "name": "timestamp",
            "baseName": "timestamp",
            "type": "string",
            "format": ""
        },
        {
            "name": "evalDebugLog",
            "baseName": "evalDebugLog",
            "type": "EvalDebugLog",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return EvalResult.attributeTypeMap;
    }
    
    public constructor() {
    }
}

