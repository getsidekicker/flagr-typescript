/**
 * Flagr
 * Flagr is a feature flagging, A/B testing and dynamic configuration microservice. The base path for all the APIs is \"/api/v1\". 
 *
 * OpenAPI spec version: 1.1.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class PutFlagRequest {
    'description'?: string;
    /**
    * enabled data records will get data logging in the metrics pipeline, for example, kafka.
    */
    'dataRecordsEnabled'?: boolean;
    /**
    * it will overwrite entityType into evaluation logs if it's not empty
    */
    'entityType'?: string;
    'enabled'?: boolean;
    'key'?: string;
    'notes'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "dataRecordsEnabled",
            "baseName": "dataRecordsEnabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "entityType",
            "baseName": "entityType",
            "type": "string",
            "format": ""
        },
        {
            "name": "enabled",
            "baseName": "enabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "key",
            "baseName": "key",
            "type": "string",
            "format": ""
        },
        {
            "name": "notes",
            "baseName": "notes",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return PutFlagRequest.attributeTypeMap;
    }
    
    public constructor() {
    }
}

